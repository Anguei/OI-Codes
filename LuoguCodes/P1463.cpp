#include <cmath>
#include <iostream>

int divisorCount(int x) {
	int res = 0;
	int U = sqrt(x) + 0.5;
	for (int i = 1; i <= U; ++i) if (x % i == 0) res += 2;
	if (U * U == x) res -= 1;
	return res;
}

const int table[] = { 1, 2, 4, 6, 12, 24, 36, 48, 60, 120, 180, 240, 360, 720, 840, 1260, 1680, 2520, 5040, 7560, 10080, 15120, 20160, 25200, 27720, 45360, 50400, 55440, 83160, 110880, 166320, 221760, 277200, 332640, 498960, 554400, 665280, 720720, 1081080, 1441440, 2162160, 2882880, 3603600, 4324320, 6486480, 7207200, 8648640, 10810800, 14414400, 17297280, 21621600, 32432400, 36756720, 43243200, 61261200, 73513440, 110270160, 122522400, 147026880, 183783600, 245044800, 294053760, 367567200, 551350800, 698377680, 735134400, 1102701600, 1396755360, 2001000000};

int main() {
	int n; 
	std::cin >> n;
	for (int i = 0; i != -1; ++i) {
		if (table[i] > n) {
			std::cout << table[i - 1] << std::endl;
			return 0;
		}
	}
	int r = 0;
	std::cout << "{";
	for (int i = 1; ; ) {
		int d = divisorCount(i);
		if (d > r) {
			r = d;
			std::cout << i << ", ";
			if (i > 2000000001) break;
		}
		if (i < 2520) i += 1;
		else i += 2520;
	}
	std::cout << "}" << std::endl;
}